#!/bin/bash

statedir=$(cd "`dirname "$0"`"; pwd)

pid="$(cat "$statedir/backup.pid" 2>/dev/null)"
if [ -n "$pid" ] && [ -e /proc/$pid ]; then
  #echo "Already Running"
  exit 0
fi
echo $$ >"$statedir/backup.pid"

exec >$statedir/backup.log 2>&1

FLAGS=--encrypt-key=8257025A
SRC=/srv
DEST=scp://admin@agrippa.local//mnt/HD/HD_a2/Backup/ashley

mail_from=`whoami`@`hostname`
mail_rcpt=`whoami`@`hostname`

export PASSPHRASE=

log(){
  logger -s -t backup -p daemon.info "$*"
}

timestamp(){
  date +%s
}

notice(){
  log "Mail from $mail_from to $mail_rcpt: $1"
  sendmail -t <<EOF
From: $mail_from
To: $mail_rcpt
Date: $(date "+%a, %e %b %Y %H:%M:%S %z")
Subject: $1

$2
EOF
}

statedir=/srv/backup
mkdir -p $statedir
cd $statedir

hour=3600
day=$((hour*24))

now=$(timestamp)
partial_date=$(cat $statedir/last-partial 2>/dev/null)
partial_age=$((now-partial_date))
error_date=$(cat $statedir/last-error-notification 2>/dev/null)
error_age=$((now-error_date))

min_partial_age=$day
max_partial_age=$((day*3))
max_error_age=$day

. ./config

: log "Started"

if [[ $partial_age -lt $min_partial_age ]]; then

  log "Last backup too recent"
  #notice "Last backup too recent" "test"

else

  log "Backup in progress"

  if out="$(nice duplicity $FLAGS $SRC $DEST 2>&1)"; then
    timestamp > $statedir/last-partial
    rm -f $statedir/last-error-notification
    notice "Backup OK" "$out"
  elif [[ $partial_age -gt $max_partial_age ]]; then
    if [[ $error_age -gt $max_error_age ]]; then
      timestamp > $statedir/last-error-notification
      notice "Backup could not proceed" "$out"
      log "Too long since last backup"
    fi
  fi

fi

: log "Finished"

#if duplicity full $FLAGS $SRC $DEST; then
#  timestamp > $statedir/last-partial
#  timestamp > $statedir/last-full
#fi

